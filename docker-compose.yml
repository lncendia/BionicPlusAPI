services:
  authservice:
    image: ${DOCKER_REGISTRY-}authservice
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    container_name: authservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - DBSETTINGS__NAME=Identity
      - DBSETTINGS__CONNECTIONSTRING=mongodb://${INPUT_MONGO_DB_CREDS}@${INPUT_MONGO_DB_CLUSTER}/?retryWrites=true
      - JWTCONFIG__ISSUERSIGNINGKEY=${INPUT_JWT_ISSUER_SIGNING_KEY}
      - JWTCONFIG__ISSUEDAUDIENCES=${INPUT_AUTH_AUDIENCE},${INPUT_API_AUDIENCE},${INPUT_PAYMENT_AUDIENCE}
      - JWTCONFIG__VALIDISSUER=${INPUT_VALID_ISSUER}
      - JWTCONFIG__VALIDAUDIENCES=${INPUT_AUTH_AUDIENCE}
      - JWTCONFIG__REFRESHTOKENVALIDITYINDAYS=30
      - JWTCONFIG__REFRESHTOKENIV=wExIGwlziTUTdqov2nKskw==
      - REVERSEPROXYCONFIG__LOGINPROXY=${INPUT_LOGIN_PROXY}
      - REVERSEPROXYCONFIG__APIPROXY=${INPUT_API_PROXY}
      - REVERSEPROXYCONFIG__PAYMENTPROXY=${INPUT_PAYMENT_PROXY}
      - ENDPOINTSCONFIG__CHECKACCOUNTURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/check
      - ENDPOINTSCONFIG__LOGINURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/login
      - ENDPOINTSCONFIG__REGISTERURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/register
      - ENDPOINTSCONFIG__REFRESHTOKENSURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/refresh
      - ENDPOINTSCONFIG__REVOKETOKENSURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/revoke
      - ENDPOINTSCONFIG__SENDCODEURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/send
      - ENDPOINTSCONFIG__CONFIRMEMAILURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/confirm/email
      - ENDPOINTSCONFIG__RESENDCODEURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/resend
      - ENDPOINTSCONFIG__FORGOTPASSWORDURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/forgot/password
      - ENDPOINTSCONFIG__RECOVERPASSWORDURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/recover/password
      - ENDPOINTSCONFIG__CHANGEPASSWORDURL=${INPUT_LOGIN_HOST}/api/v1/authenticate/change/password
      - ENDPOINTSCONFIG__CARDLISTURL=${INPUT_API_HOST}/api/Card/all
      - ENDPOINTSCONFIG__CARDURL=${INPUT_API_HOST}/api/Card
      - ENDPOINTSCONFIG__BASICCARDURL=${INPUT_API_HOST}/api/Card/basic
      - ENDPOINTSCONFIG__IMAGEUPLOADURL=${INPUT_API_HOST}/api/Images/upload
      - ENDPOINTSCONFIG__PROFILEURL=${INPUT_LOGIN_HOST}/api/profile
      - ENDPOINTSCONFIG__PROFILEUPDATEURL=${INPUT_LOGIN_HOST}/api/profile/profile
      - ENDPOINTSCONFIG__PROFILEUNITSURL=${INPUT_LOGIN_HOST}/api/profile/units
      - ENDPOINTSCONFIG__PROFILEMEASUREURL=${INPUT_LOGIN_HOST}/api/profile/measure
      - ENDPOINTSCONFIG__SURVEYURL=${INPUT_API_HOST}/api/Survey
      - ENDPOINTSCONFIG__SURVEYANSWERURL=${INPUT_API_HOST}/api/Survey/answer
      - ENDPOINTSCONFIG__SURVEYLISTURL=${INPUT_API_HOST}/api/Survey/my
      - ENDPOINTSCONFIG__SURVEYROLLBACKURL=${INPUT_API_HOST}/api/Survey/rollback
      - ENDPOINTSCONFIG__SURVEYRATEURL=${INPUT_API_HOST}/api/Survey/rate
      - ENDPOINTSCONFIG__PREGNANCYURL=${INPUT_API_HOST}/api/Pregnancy
      - ENDPOINTSCONFIG__CHILDRENURL=${INPUT_API_HOST}/api/Children
      - ENDPOINTSCONFIG__PAYMENTSERVICEURL=${INPUT_PAYMENT_HOST}
      - ENDPOINTSCONFIG__SUBSCRIPTIONURL=${INPUT_PAYMENT_HOST}/api/Subscription
      - ENDPOINTSCONFIG__ROBOKASSACHECKOUTURL=${INPUT_PAYMENT_HOST}/api/Robokassa/checkout
      - ENDPOINTSCONFIG__PROMOCODEURL=${INPUT_PAYMENT_HOST}/api/Subscription/promocode
      - ENDPOINTSCONFIG__CALCULATEPRICEURL=${INPUT_PAYMENT_HOST}/api/Subscription/price/calculate
      - SETTINGSCONFIG__CAPTCHAKEY=${INPUT_CAPTCHA_KEY}
      - SETTINGSCONFIG__CAPTCHASECRET=${INPUT_CAPTCHA_SECRET}
      - SETTINGSCONFIG__GOOGLECLIENTID=${INPUT_GOOGLE_CLIENT_ID}
      - PAYMENTCONFIG__INTERCEPTURL=auth.robokassa.ru/Merchant/State
      - EMAILCONFIGURATION__FROM=sergeizahargood@gmail.com
      - EMAILCONFIGURATION__SMTPSERVER=smtp.gmail.com
      - EMAILCONFIGURATION__PORT=465
      - EMAILCONFIGURATION__USERNAME=${INPUT_SMTP_USER}
      - EMAILCONFIGURATION__PASSWORD=${INPUT_SMTP_PASSWORD}
      
  bionicplusapi:
    image: ${DOCKER_REGISTRY-}bionicplusapi
    build:
      context: .
      dockerfile: BionicPlusAPI/BionicPlusAPI/Dockerfile
    container_name: bionicplusapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - REVERSEPROXYCONFIG__APIPROXY=${INPUT_API_PROXY}
      - DBSETTINGS__NAME=MainDb
      - DBSETTINGS__CONNECTIONSTRING=mongodb://${INPUT_MONGO_DB_CREDS}@${INPUT_MONGO_DB_CLUSTER}/?retryWrites=true
      - JWTCONFIG__ISSUERSIGNINGKEY=${INPUT_JWT_ISSUER_SIGNING_KEY}
      - JWTCONFIG__VALIDISSUER=${INPUT_VALID_ISSUER}
      - JWTCONFIG__VALIDAUDIENCES=${INPUT_API_AUDIENCE}
      - ENDPOINTSCONFIG__PAYMENTSERVICEURL=${INPUT_PAYMENT_HOST}
      - AWS__ACCESSKEY=${INPUT_AWS_ACCESS_KEY_ID}
      - AWS__SECRETKEY=${INPUT_AWS_SECRET_ACCESS_KEY}
      - AWS__REGION=eu-north-1
      - S3SETTINGS__BUCKETNAME=img-babytips.me

  paymentservice:
    image: ${DOCKER_REGISTRY-}paymentservice
    build:
      context: .
      dockerfile: PaymentService/Dockerfile
    container_name: paymentservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - REVERSEPROXYCONFIG__PAYMENTPROXY=${INPUT_PAYMENT_PROXY}
      - JWTCONFIG__ISSUERSIGNINGKEY=${INPUT_JWT_ISSUER_SIGNING_KEY}
      - JWTCONFIG__VALIDISSUER=${INPUT_VALID_ISSUER}
      - JWTCONFIG__VALIDAUDIENCES=${INPUT_PAYMENT_AUDIENCE}
      - DBSETTINGS__NAME=MainDb
      - DBSETTINGS__IDENTITYNAME=Identity
      - DBSETTINGS__CONNECTIONSTRING=mongodb://${INPUT_MONGO_DB_CREDS}@${INPUT_MONGO_DB_CLUSTER}/?retryWrites=true
      - PLANSCONFIGURATION__FREEPLANID=${INPUT_FREE_PLAN_ID}
      - ALLOWEDIPS__ADRESSES=${INPUT_ALLOWED_IPS}
      - EMAILCONFIGURATION__FROM=no-reply@babytips.me
      - EMAILCONFIGURATION__SMTPSERVER=email-smtp.us-east-1.amazonaws.com
      - EMAILCONFIGURATION__PORT=465
      - EMAILCONFIGURATION__USERNAME=${INPUT_SMTP_USER}
      - EMAILCONFIGURATION__PASSWORD=${INPUT_SMTP_PASSWORD}
      - ENDPOINTSCONFIG__AUTHSERVICEURL=${INPUT_LOGIN_HOST}
      - MERCHANTINFO__PASSWORD1=${INPUT_MERCHANT_PASS1}
      - MERCHANTINFO__PASSWORD2=${INPUT_MERCHANT_PASS2}
        
  nginx:
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ${APPDATA}/ASP.NET/https:/https:ro
    depends_on:
      - authservice
      - bionicplusapi
      - paymentservice
  
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: Buk7op
      MONGO_INITDB_ROOT_PASSWORD: Hadofo42
  
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8085:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: Buk7op
      ME_CONFIG_MONGODB_ADMINPASSWORD: Hadofo42
      ME_CONFIG_MONGODB_URL: mongodb://Buk7op:Hadofo42@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
